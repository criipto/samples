# This is a basic workflow to help you get started with Actions

name: Criipto.Signatures

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.x'
      - name: install tools
        run: |
            dotnet tool restore
            dotnet tool install aver
      - name: restore package
        run: dotnet paket restore
      - name: Generate client
        run: dotnet snowflaqe --generate
        working-directory: ./Signing/signatures
      - name: Build 
        run: dotnet build Signing/signatures/Criipto.Signatures.fsproj -c Release
      - name: Pack the package
        run: dotnet paket pack ./package --version "$(dotnet aver Signing/signatures/bin/Release/net6.0/Criipto.Signatures.dll | grep AssemblyVersion | rev | cut -d' ' -f1 | rev)-alpha"
      - name: Push the package
        run: dotnet paket push --api-key ${{ secrets.NUGET_APIKEY }} $(ls ./package/*.nupkg)