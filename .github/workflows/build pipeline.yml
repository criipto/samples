name: Template package and demo app release pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-cljs:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Restore js dependencies
      run: npm install
      working-directory: ./Bank/Cljs-re-frame
    - name: Test build the project
      run: npm run build
      working-directory: ./Bank/Cljs-re-frame

  build-feliz:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        
    - name: Restore tools
      run: dotnet tool restore
      working-directory: ./Bank/Fable
    - name: Restore dotnet dependencies 
      run: dotnet paket restore
      working-directory: ./Bank/Fable
    - name: Restore js dependencies
      run: npm install
      working-directory: ./Bank/Fable
    - name: Test build the project
      run: npm run build
      working-directory: ./Bank/Fable
    - name: Create release folder
      run: |
          mkdir releases
          mkdir releases/static
    - name: Collect static files
      run: |
          set -e
          cp ./Bank/Fable/dist/style.*.css releases/static/style.css
          cp ./Bank/Fable/dist/documents.json releases/static/documents.json
          cp ./Bank/Fable/dist/messages.json releases/static/messages.json
          cp ./Bank/Fable/dist/*.b64 releases/static/
          cp -r ./Bank/Fable/dist/img releases/static/
    - name: Upload static files
      uses: actions/upload-artifact@master
      with:
        name: static-files
        path: releases/static/
      
  build-template-project:
    runs-on: ubuntu-latest
    needs:
    - build-feliz
    - build-cljs
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Build the template package
      run: dotnet pack -o build
    - uses: actions/upload-artifact@master
      with:
        name: template-package
        path: ./build/

  test-cljs-template:
    needs: build-template-project
    runs-on: ubuntu-latest
    steps:
    - name: Download build artefactsß
      uses: actions/download-artifact@master
      with:
        name: template-package
        path: ./build/
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install template
      run: dotnet new -i $(ls ./build/*.* | grep Criipto)
      working-directory: ./
    - name: create cljs project from template
      run: dotnet new CriiptoCljsSample -o deployment-cljs-source
    - name: Restore js dependencies
      run: npm install
      working-directory: deployment-cljs-source
    - name: Test build the project
      run: npm run build
      working-directory: deployment-cljs-source
    - uses: actions/upload-artifact@master
      with:
        name: cljs-demo
        path: ./deployment-cljs-source/resources

  test-feliz-template:
    needs: build-template-project
    runs-on: ubuntu-latest
    steps:
    - name: Download build artefactsß
      uses: actions/download-artifact@master
      with:
        name: template-package
        path: ./build/
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Install template
      run: dotnet new -i $(ls ./build/*.* | grep Criipto)
      working-directory: ./
    - name: create feliz project from template
      run: dotnet new CriiptoFelizSample -o deployment-feliz-source
    - name: Restore tools
      run: dotnet tool restore
      working-directory: ./deployment-feliz-source/src
    - name: install dotnet dependencies for templated project
      run: dotnet paket update
      working-directory: ./deployment-feliz-source/src
    - name: install JS dependencies for templated project
      run: npm install
      working-directory: ./deployment-feliz-source/
    - name: build the templated project
      run: npm run build
      working-directory: ./deployment-feliz-source/
      env:
         WEBPACK_OUT_DIR: ../releases/feliz
    - uses: actions/upload-artifact@master
      with:
        name: feliz-demo
        path: ./releases/feliz

  publish-demo-sites:
    needs: 
    - test-feliz-template
    - build-feliz
    runs-on: ubuntu-latest
    steps:
    - name: Download cljs build artefacts
      uses: actions/download-artifact@master
      with:
        name: cljs-demo
        path: releases/cljs/
    - name: Download feliz build artefacts
      uses: actions/download-artifact@master
      with:
        name: feliz-demo
        path: releases/feliz/
    - name: Download static files
      uses: actions/download-artifact@master
      with:
        name: static-files
        path: releases/static/
    - name: Publish demo site
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: feliz 
        FOLDER: ./releases # netlify will pick up pushes to this branch and make the build output available as a static site
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        MESSAGE: "Build: ({sha}) {msg}"

  push-template-package:
    needs: 
    - test-feliz-template
    - test-cljs-template
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@master
      with:
        name: template-package
        path: ./build/
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Push the package
      run: | 
         path=$(ls ./build/*.nupkg)
         echo "Path: $path"
         dotnet nuget push $path --api-key ${{ secrets.NUGET_APIKEY }} --source https://api.nuget.org/v3/index.json
