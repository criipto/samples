{"version":3,"sources":["day8/re_frame_10x/utils/utils.cljs"],"mappings":"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","names":["day8.re-frame-10x.utils.utils/diff-link","day8.re-frame-10x.utils.utils/last-in-vec","v","num","cljs.core/count","cljs.core.nth","day8.re-frame-10x.utils.utils/find-all-indexes-in-vec","pred","p1__14319#","p2__14318#","cljs.core.keep_indexed","day8.re-frame-10x.utils.utils/find-index-in-vec","cljs.core/first","day8.re-frame-10x.utils.utils/id-between-xf","beginning","ending","p1__14323#","cljs.core.filter","var_args","G__14335","day8.re-frame-10x.utils.utils/spy","js/Error","x","js/console.log","label","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.utils.utils/pluralize","p__14346","vec__14347","seq14337","G__14338","cljs.core/next","G__14339","self__4851__auto__","singular","plural","cljs.core._EQ_","or__4253__auto__","day8.re-frame-10x.utils.utils/pluralize-","p__14375","vec__14376","seq14366","G__14367","G__14368","day8.re-frame-10x.utils.utils/copy-to-clipboard","text","el","js/document","day8.re-frame-10x.utils.utils/default-readers","form","cljs.core/uuid"],"sourcesContent":["(ns day8.re-frame-10x.utils.utils)\n\n(def diff-link \"https://github.com/day8/re-frame-10x/blob/master/docs/HyperlinkedInformation/Diffs.md\")\n\n(defn last-in-vec\n  \"Get the last element in the vector. Returns nil if v is empty\"\n  [v]\n  (let [num (count v)]\n    (if (zero? num)\n      nil\n      (nth v (dec num)))))\n\n(defn find-all-indexes-in-vec\n  \"Gets the index of all items in vec that match the predicate\"\n  [pred v]\n  (keep-indexed #(when (pred %2) %1) v))\n\n(defn find-index-in-vec\n  \"Gets the index of the first item in vec that matches the predicate\"\n  [pred v]\n  (first (find-all-indexes-in-vec pred v)))\n\n(defn id-between-xf\n  \"Returns a transducer that filters for :id between beginning and ending.\"\n  [beginning ending]\n  (filter #(<= beginning (:id %) ending)))\n\n(defn spy\n  ([x]\n   (js/console.log x)\n   x)\n  ([label x]\n   (js/console.log label x)\n   x))\n\n(defn pluralize\n  \"Return a pluralized phrase, appending an s to the singular form if no plural is provided.\n  For example:\n     (pluralize 5 \\\"month\\\") => \\\"5 months\\\"\n     (pluralize 1 \\\"month\\\") => \\\"1 month\\\"\n     (pluralize 1 \\\"radius\\\" \\\"radii\\\") => \\\"1 radius\\\"\n     (pluralize 9 \\\"radius\\\" \\\"radii\\\") => \\\"9 radii\\\"\n     From https://github.com/flatland/useful/blob/194950/src/flatland/useful/string.clj#L25-L33\"\n  [num singular & [plural]]\n  (str num \" \" (if (= 1 num) singular (or plural (str singular \"s\")))))\n\n(defn pluralize-\n  \"Same as pluralize, but doesn't prepend the number to the pluralized string.\"\n  [num singular & [plural]]\n  (if (= 1 num)\n    singular\n    (or plural (str singular \"s\"))))\n\n(defn copy-to-clipboard\n  [text]\n  (let [el (.createElement js/document \"textarea\")]\n    (set! (.-value el) text)\n    (set! (-> el .-style .-position) \"absolute\")\n    (set! (-> el .-style .-left) \"-9999px\")\n    (.appendChild (.-body js/document) el)\n    (.select el)\n    (.execCommand js/document \"copy\")\n    (.removeChild (.-body js/document) el)))\n\n(def default-readers\n  {'uuid (fn default-uuid-reader [form]\n           {:pre [(string? form)]}\n           (uuid form))})\n"]}