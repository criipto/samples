{"version":3,"sources":["cljs_re_frame/router.cljs"],"mappings":";AAKA,AAAKA,8BACH,gCAAA,wCAAA,GAAA,OAAA,UAAA,WAAA,WAAA,wBAAA,WAAA,wBAAA,oBAAA,eAAA,iEAAA,qDAAA,2DAAA,6DAAA,6DAAA,wFAAA,4DAAA,sFAAA,+EAAA,nyBAAMC;AAAN,AAAA,0FAAA,GAUM,2DAAA,3DAACC,8CAAMD,8BAAyBA;;AAExC,AAAKE,+BACH,4BAAA,WAAAC,tBAAME;AAAN,AAAgB,8BAAA,mFAAA,6GAAAF,vNAACG;;YAAjB,WAAAF,nBACMG;AADN,AACa,yDAAAH,lDAACI,sBAAiBT;;AAD/B,AAEE,OAACU,iBAAYJ,SAASE;;AAE1B,mCAAA,nCAAMG,8EAAaC;AAAnB,AACE,OAACH,sBAAiBT,4BAAOY;;AAE3B,mCAAA,nCAAMC;AAAN,AAEE,OAAcV;;AAEhB,AAAKW,gCACH,AAACC,gDAAQC,mBAAchB;AAEzB,uCAAA,vCAAMiB,sFACHC;AADH,AAEE,OAAkBf,8EAAQe","names":["cljs-re-frame.router/routes","routes*","cljs.core.assoc","cljs-re-frame.router/history","p1__22018#","p1__22019#","dispatch","re-frame.core/dispatch","match","bidi.bidi/match-route","pushy.core/pushy","cljs-re-frame.router/match-route","uri","cljs-re-frame.router/start!","cljs-re-frame.router/path-for","cljs.core.partial","bidi.bidi/path-for","cljs-re-frame.router/set-token!","token"],"sourcesContent":["(ns cljs-re-frame.router\n  (:require [bidi.bidi :as bidi]\n            [pushy.core :as pushy]\n            [re-frame.core :as rf]))\n\n(def routes\n  (let [routes* {\"\"                      :front-page\n                 \"profile\"               :profile\n                 \"overview\"              :overview\n                 \"auth\"                  :auth\n                 \"accounts\"              :accounts\n                 \"payments-and-transfer\" :payments-and-transfer\n                 \"investment\"            :investment\n                 \"pension-and-insurance\" :pension-and-insurance\n                 \"messages\"              :messages\n                 \"developer-support\"     :developer-support}]\n    [\"\" (assoc routes* \"/samples/cljs/\" routes*)]))\n\n(def history\n  (let [dispatch #(rf/dispatch [::route-changed %])\n        match #(bidi/match-route routes %)]\n    (pushy/pushy dispatch match)))\n\n(defn match-route [uri]\n  (bidi/match-route routes uri))\n\n(defn start!\n  []\n  (pushy/start! history))\n\n(def path-for\n  (partial bidi/path-for routes))\n\n(defn set-token!\n  [token]\n  (pushy/set-token! history token))\n"]}