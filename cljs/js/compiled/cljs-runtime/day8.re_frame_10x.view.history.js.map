{"version":3,"sources":["day8/re_frame_10x/view/history.cljs"],"mappings":";AAMA,gDAAA,mFAAA,gFAAA,mFAAA,uEAAA,2CAAA,qIAAA,kEAAA,SAAA,gEAAA,SAAA,wDAAA,mBAAA,mFAAA,wEAAA,wCAAA,wEAAA,uDAAA,mEAAA,mEAAA,6DAAA,4EAAA,yDAAA,mEAAA,2DAAA,2DAAA,mEAAA,SAAA,MAAA,uEAAA,UAAA,IAAA,MAAA,QAAA,mFAAA,2DAAA,2CAAA,wIAAA,mFAAA,oFAAA,2CAAA,iHAAA,yDAAA,0BAAA,mFAAA,yFAAA,2CAAA,2HAAA,mFAAA,2DAAA,2CAAA,t9FAAKA,oeAGkBC,smCAKCC,gFACAC,0UAUVC,0VAEAC,2ZAGDC,oTAECF;AAEd,8CAAA,9CAAMG,oGAAcC,MAAMC,GAAGC;AAA7B,AACE,IAAMC,YAAU,wDAAA,MAAA,9DAACC,iHAAqBJ;IAChCK,gBAAU,AAACC,6CAAEL,GAAGC;IAChBK,kBAAU,CAAGN,KAAGC;AAFtB,AAAA,0FAAA,qDAIG,uGAAA,2CAAA,lJAACM,0MACS,CAAA,eACK,iBAAA,AAAA,UAAA,zBAAMH,+BACN,mBAAA,AAAA,YAAA,7BAAME,qDACnB,iBAAA,KAAA,AAAA,2CAAA,6DAAA,5HAAUF;AAAV,AACc,6EAAA,mFAAA,zJAACI,oOAAgCR;GAD/C,sDAAA,oCAGFE;;AAEL,wCAAA,xCAAMO;AAAN,AACE,iBAAA,AAAAC,bAAMC,6BAAY,qGAAA,mFAAA,xLAACC;iBAAnB,AAAAF,bACMT,6BAAY,qGAAA,mFAAA,xLAACW;AADnB,AAAA,+HAAA,wDAAA,eAAA,yDAAA,MAAA,6DAAA,xOAEGC,2TAGW,iBAAAC,qBAAA,8DAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBAw4EmC,AAAAmB,sBAAAxB;IAx4EnCM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,IAAAK,aAAA,AAAAC,eAAAP,gBAAAK;SAAA,AAAAG,4CAAAF,WAAA,IAAA,hEAAO1B;YAAP,AAAA4B,4CAAAF,WAAA,IAAA,nEAAU3B;AAAV,AAAA,oBACY,AAACuC,oBAAUvC;AADvB,AAAA,AAAA8B,uBAAAN,SAAA,oBAAA,2JAAA,2CAAA,oDAEYvB,vKACNF,4CAAaC,MAAMC,GAAGC;;AAH5B,eAAA,CAAAwB,WAAA;;;;AAAA,eAAA,CAAAA,WAAA;;;;;AAAA;;;;;AAAA,OAAAK,qBAAA,AAAAC,gBAAAR,UAAA,AAAAS,oDAAA,AAAAC,qBAAAlB;;AAAA,OAAAe,qBAAA,AAAAC,gBAAAR,UAAA;;;AAAA,IAAAW,aAAA,AAAAC,gBAAApB;SAAA,AAAAa,4CAAAM,WAAA,IAAA,hEAAOlC;YAAP,AAAA4B,4CAAAM,WAAA,IAAA,nEAAUnC;AAAV,AAAA,oBACY,AAACuC,oBAAUvC;AADvB,OAAAqC,eAAA,oBAAA,2JAAA,2CAAA,gEAAA,AAAAJ,oDAAA,AAAAK,eAAAtB,/EAEYf,vKACNF,4CAAaC,MAAMC,GAAGC;;AAH5B,eAAA,AAAAoC,eAAAtB;;;;;;AAAA;;;;GAAA,KAAA;;AAAA,AAAA,OAAAD,mBAAiBH","names":["day8.re-frame-10x.view.history/history-styles","day8.re-frame-10x.common-styles/history-background-color","day8.re-frame-10x.common-styles/history-item-text-color","day8.re-frame-10x.common-styles/history-item-background-color","day8.re-frame-10x.common-styles/history-item-hover-color","day8.re-frame-10x.common-styles/history-item-active-color","day8.re-frame-10x.common-styles/history-item-inactive-color","day8.re-frame-10x.view.history/history-item","event","id","current-id","event-str","day8.re-frame-10x.utils.pretty-print-condensed/truncate","active?","cljs.core._EQ_","inactive?","cljs.core.merge","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/dispatch","day8.re-frame-10x.view.history/render","cljs.core/deref","all-events","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.subscribe","day8.re-frame-10x.utils.re-com/v-box","iter__4652__auto__","s__20674","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__20676","cljs.core/chunk-buffer","i__20675","vec__20677","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__20673","cljs.core/chunk-rest","vec__20680","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core/not-empty","cljs.core/chunk-first"],"sourcesContent":["(ns day8.re-frame-10x.view.history\n  (:require [day8.re-frame-10x.utils.re-com :as rc]\n            [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core :as rf]\n            [day8.re-frame-10x.common-styles :as common]\n            [day8.re-frame-10x.utils.pretty-print-condensed :as pp]))\n\n(def history-styles\n  [:#--re-frame-10x--\n   [:.history-list\n    {:background-color common/history-background-color\n     :overflow-y       \"scroll\"\n     :overflow-x       \"hidden\"\n     :resize           \"vertical\"}\n    [:.history-item\n     {:color            common/history-item-text-color\n      :background-color common/history-item-background-color\n      :margin           \"2px\"\n      :padding          \"5px\"\n      :font-weight      \"600\"\n      :cursor           \"pointer\"\n      :text-overflow    \"ellipsis\"\n      :white-space      \"nowrap\"\n      :overflow         \"hidden\"\n      :flex-shrink      0}\n     [:&:hover\n      {:color common/history-item-hover-color}]]\n    [:.history-item.active\n     {:color  common/history-item-active-color\n      :cursor \"default\"}]\n    [:.history-item.inactive\n     {:color common/history-item-inactive-color}\n     [:&:hover\n      {:color common/history-item-hover-color}]]]])\n\n(defn history-item [event id current-id]\n  (let [event-str (pp/truncate 400 :end event)\n        active?   (= id current-id)\n        inactive? (> id current-id)]\n    [:span\n     (merge\n       {:class (str \"history-item\"\n                    (when active?   \" active\")\n                    (when inactive? \" inactive\"))}\n       (when-not active?\n         {:on-click #(rf/dispatch [:epochs/load-epoch id])\n          :title    \"Jump to this epoch\"}))\n     event-str]))\n\n(defn render []\n  (let [all-events @(rf/subscribe [:epochs/all-events-by-id])\n        current-id @(rf/subscribe [:epochs/current-epoch-id])]\n    [rc/v-box\n     :class \"history-list\"\n     :height \"20%\"\n     :children [(for [[id event] all-events\n                      :when (not-empty event)]\n                     ^{:key id}\n                     [history-item event id current-id])]]))\n\n"]}