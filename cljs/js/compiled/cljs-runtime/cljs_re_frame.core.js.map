{"version":3,"sources":["cljs_re_frame/core.cljs"],"mappings":";AASA,yBAAA,zBAAMA;AAAN,AACE,IAAMC,aAAW,AAACC,gBAAM,sDAAA,mFAAA,zIAACC;IACnBC,iBAAe,AAACF,gBAAM,sDAAA,mFAAA,zIAACC;IACvBE,cAAY,AAACH,gBAAM,sDAAA,mFAAA,zIAACC;AAF1B,AAAA,0FAAA,mDAAA,mFAAA,2EAAA,mFAAA,6EAAA,mFAAA,2EAAA,2CAAA,wDAAA,wCAAA,mFAAA,2EAAA,2CAAA,wDAAA,oBAAA,mFAAA,uEAAA,kBAAA,mFAAA,+DAAA,+BAAA,mFAAA,yEAAA,mFAAA,2EAAA,mFAYOG,kEAEJ,6BAAA,mFAAA,mEAAA,2CAAA,wDAAA,cAAA,uDAAA,2CAAA,gEAAA,uBAAA,mFAAA,kEAAA,mFAAA,qEAAA,mFAAA,6IAAA,iCAAA,mFAAA,qEAAA,mFAAA,mEAAA,2CAAA,wDAAA,cAAA,uDAAA,2CAAA,gEAAA,uBAAA,+HAAA,mFAAA,kEAAA,mFAAA,qEAAA,iKAAA,AAAA,9qEACE,GAAA,eAAA,dAAOL,44BAKG,4CAAKA,8CAEf,GAAA,mBAAA,lBAAOG,ssBAIJG,4aAGEC,0BAAMH,uIAGVI;;;AAER,+BAAA,/BAAMC;AAAN,AACE,GAAMC;AAAN,AACE,gHAAA,zGAACC;;AADH;;;AAGF,2BAAA,3BAAuBC;AAAvB,AACE,AAACC;;AACD,IAAMC,UAAQ,wBAAA,xBAAiBC;AAA/B,AACE,AAACC,sCAA+BF;;AAChC,wDAAA,jDAACG,oIAAalB,+BAAKe;;AAEvB,0BAAA,1BAAMI;AAAN,AACE,AAACC;;AACD,4BAAA,mFAAA,/GAACC;;AACD,AAACX;;AACD,OAACG","names":["cljs-re-frame.core/app","auth-error","cljs.core/deref","re_frame.core.subscribe","auth-user-info","active-page","cljs-re-frame.views/log-in-button","cljs-re-frame.views/navigation-menu","cljs-re-frame.views/pages","cljs-re-frame.views/front-page","cljs-re-frame.core/dev-setup","cljs-re-frame.config/debug?","cljs.core.println","cljs-re-frame.core/start","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","cljs-re-frame.core/init","cljs-re-frame.router/start!","re-frame.core/dispatch-sync"],"sourcesContent":["(ns cljs-re-frame.core\n  (:require [cljs-re-frame.config :as config]\n            [cljs-re-frame.events :as events]\n            [cljs-re-frame.router :as router]\n            [cljs-re-frame.subs :as subs]\n            [cljs-re-frame.views :refer [front-page pages navigation-menu log-in-button]]\n            [re-frame.core :as rf]\n            [reagent.dom :as rdom]))\n\n(defn app []\n  (let [auth-error (deref (rf/subscribe [::subs/auth-error]))\n        auth-user-info (deref (rf/subscribe [::subs/auth-user]))\n        active-page (deref (rf/subscribe [::subs/active-page]))]\n    [:div\n     [:div.navbar-menu\n      [:div.navbar-start\n       [:div.navbar-item {:class \"icon credit-card-logo\"}]\n       [:div.navbar-item {:class \"logo-text\"}\n        [:span.app-name \"Criipto\"]\n        [:span.bank \"Bank\"]]]\n      [:div.navbar-end\n       [:div.navbar-item\n        [log-in-button]]]]\n\n     (cond\n       (some? auth-error)\n       [:div.columns {:class \"is-centered\"\n                      :style {:margin-top \"40px\"}}\n        [:div.column\n         [:div.container\n          [:span (str auth-error)]]]]\n\n       (some? auth-user-info)\n       [:div.container\n        [:div.columns {:class \"is-centered\"\n                       :style {:margin-top \"40px\"}}\n         [navigation-menu]\n         [:div.column\n          [:div.container\n           [pages active-page]]]]]\n\n       :default\n       [front-page])]))\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load start []\n  (rf/clear-subscription-cache!)\n  (let [root-el (.getElementById js/document \"app\")]\n    (rdom/unmount-component-at-node root-el)\n    (rdom/render [app] root-el)))\n\n(defn init []\n  (router/start!)\n  (rf/dispatch-sync [::events/initialize-db])\n  (dev-setup)\n  (start))\n"]}