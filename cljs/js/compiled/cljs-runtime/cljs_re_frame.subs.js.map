{"version":3,"sources":["cljs_re_frame/subs.cljs"],"mappings":";AAGA,2DAAA,3DAACA,sMAEA,WAAKC;AAAL,AACE,OAAA,mFAAOA;;AAEV,2DAAA,3DAACD,iNAEC,WAAKC;AAAL,AACE,sDAAA,/CAACC,4CAAID;;AAET,2DAAA,3DAACD,+MAEA,WAAKC;AAAL,AACE,sDAAA,/CAACC,4CAAID;;AAER,2DAAA,3DAACD,oNAEC,WAAKC;AAAL,AACE,yDAAA,mFAAA,kDAAA,vLAACE,+CAAOF;;AAEZ,2DAAA,3DAACD,+OAEC,WAAKC;AAAL,AACE,4IAAK,+CAAA,/CAACC,4CAAID,3DACLG,tGACA,+CAAA,uDAAA,tGAACC,hBACDC;;AAET,2DAAA,3DAACN,4MAEC,WAAKC;AAAL,AACE,sDAAA,/CAACC,4CAAID;;AAET,2DAAA,3DAACD,8MAEC,WAAKC;AAAL,AACE,sDAAA,/CAACC,4CAAID","names":["re_frame.core.reg_sub","db","cljs.core.get","cljs.core.get_in","cljs.core/vals","cljs.core.remove","cljs.core/count"],"sourcesContent":["(ns cljs-re-frame.subs\n  (:require [re-frame.core :as rf]))\n\n(rf/reg-sub\n ::name\n (fn [db]\n   (:name db)))\n\n(rf/reg-sub\n  ::auth-error\n  (fn [db]\n    (get db :authorization-error-message)))\n\n(rf/reg-sub\n ::auth-user\n (fn [db]\n   (get db :user-profile)))\n\n(rf/reg-sub\n  ::active-page\n  (fn [db]\n    (get-in db [:nav :active-page])))\n\n(rf/reg-sub\n  ::number-of-unread-messages\n  (fn [db]\n    (->> (get db :messages)\n         vals\n         (remove :read?)\n         count)))\n\n(rf/reg-sub\n  ::messages\n  (fn [db]\n    (get db :messages)))\n\n(rf/reg-sub\n  ::accounts\n  (fn [db]\n    (get db :accounts)))\n"]}